{"remainingRequest":"/Users/zbywjq/Desktop/cloudwork/VideoBatches/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zbywjq/Desktop/cloudwork/VideoBatches/src/views/source/PageSource.vue?vue&type=style&index=0&id=11e6c074&lang=scss&scoped=true&","dependencies":[{"path":"/Users/zbywjq/Desktop/cloudwork/VideoBatches/src/views/source/PageSource.vue","mtime":1597140823812},{"path":"/Users/zbywjq/Desktop/cloudwork/VideoBatches/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zbywjq/Desktop/cloudwork/VideoBatches/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/zbywjq/Desktop/cloudwork/VideoBatches/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/zbywjq/Desktop/cloudwork/VideoBatches/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zbywjq/Desktop/cloudwork/VideoBatches/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zbywjq/Desktop/cloudwork/VideoBatches/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLnBhZ2Utc291cmNlewogICAgd2lkdGg6IDEwMCU7CiAgICBoZWlnaHQ6IDEwMCU7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjVmNWY1OwoKICAgIC5lZGl0LXRvcC1idG5zewogICAgICAgIHdpZHRoOiAxMDAlOwogICAgICAgIGhlaWdodDogMTAwJTsKICAgICAgICBkaXNwbGF5OiBmbGV4OwogICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7CiAgICAgICAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDsKICAgIH0KICAgIAogICAgLnBhZ2UtY29udGVudHsKICAgICAgICB3aWR0aDogMTAwJTsKICAgICAgICBoZWlnaHQ6IGNhbGMoMTAwJSAtIDUwcHgpOwogICAgICAgIHBhZGRpbmc6IDE1cHg7CgogICAgICAgIC5wYWdlLXNvdXJjZS1saXN0ewogICAgICAgICAgICB3aWR0aDogMTAwJTsKICAgICAgICAgICAgaGVpZ2h0OiAxMDAlOwogICAgICAgICAgICBiYWNrZ3JvdW5kOiAjZmZmZmZmOwogICAgICAgIH0KICAgIH0KfQo="},{"version":3,"sources":["PageSource.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoFA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","file":"PageSource.vue","sourceRoot":"src/views/source","sourcesContent":["<template>\n    <div class=\"page-source\">\n        <MainHeader :hasBack=\"false\" title=\"海报视频模板\" :hasTaskBtn=\"false\" :hasHelpBtn=\"false\">\n            <div class=\"edit-top-btns\">\n                <el-button type=\"primary\" size=\"small\" @click=\"selectedHandler\">选用</el-button>\n            </div>\n        </MainHeader>\n        <div class=\"page-content\">\n            <div class=\"page-source-list\">\n                <AmSourceSelect \n                ref=\"sourceSelect\"\n                :enabledType=\"enabledType\"\n                :enabledCheckBox=\"enabledCheckBox\"\n                :propPageSize=\"60\"\n                @flushList=\"flushListHandler\"/>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nimport MainHeader from '@/views/components/MainHeader';\nimport AmSourceSelect from 'am-source-select';\nimport * as Interface from '../../store/interfaceUrl.js';\nimport * as types from '../../store/mutationTypes.js';\nimport global from '../../plugins/global';\nimport {mapState,mapMutations} from 'vuex';\nexport default {\n    components:{MainHeader,AmSourceSelect},\n    props:{\n        // hasBack:{\n        //     type:Boolean,\n        //     default: false\n        // },\n        // title:{\n        //     type:String,\n        //     default:''\n        // }\n    },\n    data(){\n        return {\n            enabledType:'video',\n            enabledCheckBox:true,\n        }\n    },\n    created(){\n        let config = this.$store.state.appStore.config;\n        console.log('config',config)\n    },\n    methods:{\n        ...mapMutations({\n\t\t\tsetCurrentMedias: types.SET_CURRENT_MEDIAS,\n\t\t}),\n        selectedHandler(){\n            const arr = this.$refs.sourceSelect.getSelectSource();\n            if(arr.length > 0){\n                let media = arr[0];\n                this.setCurrentMedias(arr);\n                this.$router.push({name:'edit',query:global.params});\n            }else{\n                this.$message({\n                    type: 'error',\n                    message: '请先选择视频'\n                });\n            }\n        },\n        flushListHandler(params){\n            // /svip/resources/outer-resources\n            console.log('flushListHandler',params)\n\t\t\twindow.axios.post(Interface.getMediaList+global.search,params)\n\t\t\t.then((data)=>{\n\t\t\t\t// console.log('data',data)\n                // this.returnData = data;\n                this.$refs.sourceSelect.setReturnData(data.returnData);\n\t\t\t}).catch( ()=>{\n\n\t\t\t})\n        },\n    }\n}\n</script>\n\n\n<style lang=\"scss\" scoped>\n.page-source{\n    width: 100%;\n    height: 100%;\n    background-color: #f5f5f5;\n\n    .edit-top-btns{\n        width: 100%;\n        height: 100%;\n        display: flex;\n        align-items: center;\n        justify-content: flex-end;\n    }\n    \n    .page-content{\n        width: 100%;\n        height: calc(100% - 50px);\n        padding: 15px;\n\n        .page-source-list{\n            width: 100%;\n            height: 100%;\n            background: #ffffff;\n        }\n    }\n}\n</style>"]}]}