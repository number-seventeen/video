{"remainingRequest":"/Users/zbywjq/Desktop/cloudwork/VideoBatches/node_modules/babel-loader/lib/index.js!/Users/zbywjq/Desktop/cloudwork/VideoBatches/src/store/appStore/AppActions.js","dependencies":[{"path":"/Users/zbywjq/Desktop/cloudwork/VideoBatches/src/store/appStore/AppActions.js","mtime":1596418914798},{"path":"/Users/zbywjq/Desktop/cloudwork/VideoBatches/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zbywjq/Desktop/cloudwork/VideoBatches/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmV4ZWMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuc2VhcmNoIjsKaW1wb3J0ICogYXMgQWN0aW9uIGZyb20gJy4uL2FjdGlvbnMuanMnOwppbXBvcnQgKiBhcyB0eXBlcyBmcm9tICcuLi9tdXRhdGlvblR5cGVzLmpzJzsKaW1wb3J0ICogYXMgSW50ZXJmYWNlIGZyb20gJy4uL2ludGVyZmFjZVVybC5qcyc7CmltcG9ydCBnbG9iYWwgZnJvbSAnLi4vLi4vcGx1Z2lucy9nbG9iYWwnOwppbXBvcnQgTXlTb2NrZXQgZnJvbSAnLi4vLi4vcGx1Z2lucy9zb2NrZXQnOwpleHBvcnQgZGVmYXVsdCB7CiAgYXBwX3ZlcmlmeTogZnVuY3Rpb24gYXBwX3ZlcmlmeShfcmVmLCBjYWxsYmFjaykgewogICAgdmFyIGNvbW1pdCA9IF9yZWYuY29tbWl0OwogICAgQWN0aW9uLmdldEpzb25EYXRhKEludGVyZmFjZS52ZXJpZnkgKyBnbG9iYWwuc2VhcmNoLCB7fSkudGhlbihmdW5jdGlvbiAoZGF0YSkgewogICAgICBpZiAoY2FsbGJhY2spIHsKICAgICAgICB2YXIgbXNnID0gewogICAgICAgICAgY21kOiAnc3VjY2VzcycsCiAgICAgICAgICBkYXRhOiBkYXRhCiAgICAgICAgfTsKCiAgICAgICAgaWYgKGRhdGEucmV0dXJuQ29kZSA9PSAxKSB7CiAgICAgICAgICBtc2cuY21kID0gJ2ZhaWwnOwogICAgICAgIH0KCiAgICAgICAgY2FsbGJhY2sobXNnKTsKICAgICAgfQogICAgfSkuY2F0Y2goZnVuY3Rpb24gKGVycikgewogICAgICBpZiAoY2FsbGJhY2spIHsKICAgICAgICBjYWxsYmFjayh7CiAgICAgICAgICBjbWQ6ICdlcnJvcicsCiAgICAgICAgICBkYXRhOiBlcnIKICAgICAgICB9KTsKICAgICAgfQogICAgfSk7CiAgfSwKICBhcHBfbG9hZENvbmZpZzogZnVuY3Rpb24gYXBwX2xvYWRDb25maWcoX3JlZjIpIHsvLyBBY3Rpb24ucG9zdEpzb25EYXRhKEludGVyZmFjZS5jb25maWcse30pLnRoZW4oIGRhdGEgPT57CiAgICAvLyAgICAgY29tbWl0KHR5cGVzLkxPQURfQ09ORklHLGRhdGEpOwogICAgLy8gfSkuY2F0Y2goIGVyciA9PnsKICAgIC8vICAgICBjb25zb2xlLmxvZygn6YWN572u6aG55Yqg6L296ZSZ6K+vJyxlcnIpCiAgICAvLyB9KQoKICAgIHZhciBjb21taXQgPSBfcmVmMi5jb21taXQ7CiAgfSwKICBjb25uZWN0U29ja2V0OiBmdW5jdGlvbiBjb25uZWN0U29ja2V0KF9yZWYzKSB7Ly8gY29uc3Qgb25tZXNzYWdlID0gKGV2ZW50KSA9PiB7CiAgICAvLyAgICAgY29uc29sZS5sb2coJ3dzIG1lc3NhZ2UnLGV2ZW50KQogICAgLy8gICAgIGlmKGV2ZW50LmRhdGEgIT0gJ3BvbmcnKXsKICAgIC8vICAgICAgICAgbGV0IG1zZyA9IEpTT04ucGFyc2UoZXZlbnQuZGF0YSk7CiAgICAvLyAgICAgICAgIGlmKG1zZy50eXBlID09ICd0YXNrU3RhdHVzJyl7CiAgICAvLyAgICAgICAgICAgICBjb21taXQodHlwZXMuVEFTS19MSVNUX01TRyxKU09OLnBhcnNlKG1zZy5tZXNzYWdlKSk7CiAgICAvLyAgICAgICAgIH0KICAgIC8vICAgICB9CiAgICAvLyB9CiAgICAvLyBjb25zdCBteVNvY2tldCA9IG5ldyBNeVNvY2tldCgnL2FwcHNvY2tldC93cycsb25tZXNzYWdlKTsKICAgIC8vIG15U29ja2V0LmNvbm5lY3QoKTsKCiAgICB2YXIgY29tbWl0ID0gX3JlZjMuY29tbWl0LAogICAgICAgIHN0YXRlID0gX3JlZjMuc3RhdGU7CiAgfQp9Ow=="},{"version":3,"sources":["/Users/zbywjq/Desktop/cloudwork/VideoBatches/src/store/appStore/AppActions.js"],"names":["Action","types","Interface","global","MySocket","app_verify","callback","commit","getJsonData","verify","search","then","data","msg","cmd","returnCode","catch","err","app_loadConfig","connectSocket","state"],"mappings":";;AACA,OAAO,KAAKA,MAAZ,MAAwB,eAAxB;AACA,OAAO,KAAKC,KAAZ,MAAuB,qBAAvB;AACA,OAAO,KAAKC,SAAZ,MAA2B,oBAA3B;AAEA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,QAAP,MAAqB,sBAArB;AAEA,eAAe;AACXC,EAAAA,UADW,4BACSC,QADT,EACkB;AAAA,QAAjBC,MAAiB,QAAjBA,MAAiB;AACzBP,IAAAA,MAAM,CAACQ,WAAP,CAAmBN,SAAS,CAACO,MAAV,GAAiBN,MAAM,CAACO,MAA3C,EAAkD,EAAlD,EAAsDC,IAAtD,CAA4D,UAAAC,IAAI,EAAG;AAC/D,UAAGN,QAAH,EAAY;AACR,YAAIO,GAAG,GAAG;AACNC,UAAAA,GAAG,EAAC,SADE;AAENF,UAAAA,IAAI,EAAEA;AAFA,SAAV;;AAIA,YAAGA,IAAI,CAACG,UAAL,IAAmB,CAAtB,EAAwB;AACpBF,UAAAA,GAAG,CAACC,GAAJ,GAAU,MAAV;AACH;;AACDR,QAAAA,QAAQ,CAACO,GAAD,CAAR;AACH;AAEJ,KAZD,EAYGG,KAZH,CAYU,UAAAC,GAAG,EAAG;AACZ,UAAGX,QAAH,EAAY;AACRA,QAAAA,QAAQ,CAAC;AACLQ,UAAAA,GAAG,EAAC,OADC;AAELF,UAAAA,IAAI,EAAEK;AAFD,SAAD,CAAR;AAIH;AACJ,KAnBD;AAoBH,GAtBU;AAuBXC,EAAAA,cAvBW,iCAuBa,CACpB;AACA;AAEA;AACA;AACA;;AANoB,QAARX,MAAQ,SAARA,MAAQ;AAQvB,GA/BU;AAgCXY,EAAAA,aAhCW,gCAgCkB,CAEzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAZyB,QAAdZ,MAAc,SAAdA,MAAc;AAAA,QAAPa,KAAO,SAAPA,KAAO;AAa5B;AA7CU,CAAf","sourcesContent":["\nimport * as Action from '../actions.js';\nimport * as types from '../mutationTypes.js';\nimport * as Interface from '../interfaceUrl.js';\n\nimport global from '../../plugins/global';\nimport MySocket from '../../plugins/socket';\n\nexport default {\n    app_verify({commit},callback){\n        Action.getJsonData(Interface.verify+global.search,{}).then( data =>{\n            if(callback){\n                let msg = {\n                    cmd:'success',\n                    data: data\n                }\n                if(data.returnCode == 1){\n                    msg.cmd = 'fail';\n                }\n                callback(msg);\n            }\n            \n        }).catch( err =>{\n            if(callback){\n                callback({\n                    cmd:'error',\n                    data: err\n                });\n            }\n        })\n    },\n    app_loadConfig({commit}){\n        // Action.postJsonData(Interface.config,{}).then( data =>{\n        //     commit(types.LOAD_CONFIG,data);\n            \n        // }).catch( err =>{\n        //     console.log('配置项加载错误',err)\n        // })\n            \n    },\n    connectSocket({commit,state}){\n        \n        // const onmessage = (event) => {\n        //     console.log('ws message',event)\n        //     if(event.data != 'pong'){\n        //         let msg = JSON.parse(event.data);\n        //         if(msg.type == 'taskStatus'){\n        //             commit(types.TASK_LIST_MSG,JSON.parse(msg.message));\n        //         }\n        //     }\n        // }\n        // const mySocket = new MySocket('/appsocket/ws',onmessage);\n        // mySocket.connect();\n    }\n}"]}]}