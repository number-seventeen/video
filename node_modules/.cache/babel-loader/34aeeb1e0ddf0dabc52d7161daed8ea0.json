{"remainingRequest":"/Users/zbywjq/Desktop/cloudwork/VideoBatches/node_modules/babel-loader/lib/index.js!/Users/zbywjq/Desktop/cloudwork/VideoBatches/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/zbywjq/Desktop/cloudwork/VideoBatches/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zbywjq/Desktop/cloudwork/VideoBatches/src/views/edit/Load.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/zbywjq/Desktop/cloudwork/VideoBatches/src/views/edit/Load.vue","mtime":1596440067703},{"path":"/Users/zbywjq/Desktop/cloudwork/VideoBatches/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zbywjq/Desktop/cloudwork/VideoBatches/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/zbywjq/Desktop/cloudwork/VideoBatches/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zbywjq/Desktop/cloudwork/VideoBatches/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KZXhwb3J0IGRlZmF1bHQgewogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICAvL+inhumikQogICAgICBpbml0VmlkZW86IHsKICAgICAgICBwbGF5OiBmYWxzZSwKICAgICAgICAvL+aSreaUvui/mOaYr+aaguWBnCB0cnVl5pKt5pS+5LitCiAgICAgICAgdmlkZW9MZW5ndGg6IDAsCiAgICAgICAgLy/ml7bplb8KICAgICAgICB1cmw6ICIuLi8uLi8uLi9wdWJsaWMvbW92aWUyLm1wNCIsCiAgICAgICAgLy/op4bpopHor77ku7ZVcmwKICAgICAgICBjdXJyZW50VGltZTogMCwKICAgICAgICAvL+W9k+WJjeaSreaUvuaXtumXtAogICAgICAgIGxhc3RUaW1lOiBudWxsLAogICAgICAgIC8v5qCH6K6w5pe26Ze05oizCiAgICAgICAgbmFtZTogIiIKICAgICAgfSAvL+mfs+mikQoKICAgIH07CiAgfSwKICBwbGF5VmlkZW86IGZ1bmN0aW9uIHBsYXlWaWRlbygpIHsKICAgIC8v5pKt5pS+6KeG6aKRCiAgICBpZiAodGhpcy5pbml0VmlkZW8ucGxheSkgewogICAgICB0aGlzLiRyZWZzLnZpZGVvLnBhdXNlKCk7CiAgICB9IGVsc2UgewogICAgICBNYXRoLmFicyh0aGlzLmluaXRWaWRlby5jdXJyZW50VGltZSAtIHRoaXMuJHJlZnMudmlkZW8uY3VycmVudFRpbWUpID4gMiA/IHRoaXMuJHJlZnMudmlkZW8uY3VycmVudFRpbWUgPSB0aGlzLmluaXRWaWRlby5jdXJyZW50VGltZSA6ICcnOwogICAgICB0aGlzLiRyZWZzLnZpZGVvLnBsYXkoKTsKICAgICAgdGhpcy4kcmVmcy52aWRlby5tdXRlZCA9IGZhbHNlOwogICAgfQogIH0sCiAgdmlkZW9UaW1lVXBkYXRlOiBmdW5jdGlvbiB2aWRlb1RpbWVVcGRhdGUoKSB7CiAgICAvL+abtOaWsOinhumikeaXtumXtOOAguiKgua1ge+8jOavj+enkuinpuWPkeS4gOasoQogICAgdmFyIG5vd1RpbWUgPSBEYXRlLm5vdygpOwogICAgdmFyIGdhcFRpbWUgPSAxMDAwOwoKICAgIGlmICghdGhpcy5pbml0VmlkZW8ubGFzdFRpbWUgfHwgbm93VGltZSAtIHRoaXMuaW5pdFZpZGVvLmxhc3RUaW1lID4gZ2FwVGltZSkgewogICAgICBpZiAodGhpcy4kcmVmcy52aWRlbykgewogICAgICAgIHZhciB0aW1lID0gdGhpcy4kcmVmcy52aWRlby5jdXJyZW50VGltZTsKICAgICAgICB0aGlzLmluaXRWaWRlby5jdXJyZW50VGltZSA9IHRpbWU7CiAgICAgIH0KCiAgICAgIHRoaXMuaW5pdFZpZGVvLmxhc3RUaW1lID0gbm93VGltZTsKICAgIH0KICB9LAogIGNoYW5nZVZpZGVvVGltZTogZnVuY3Rpb24gY2hhbmdlVmlkZW9UaW1lKHZhbCkgewogICAgLy/mlLnlj5jop4bpopHml7bpl7QKICAgIGNvbnNvbGUubG9nKHZhbCwgJ3ZpZGVvJyk7CgogICAgaWYgKHRoaXMuJHJlZnMudmlkZW8pIHsKICAgICAgdGhpcy4kcmVmcy52aWRlby5jdXJyZW50VGltZSA9IHZhbDsKICAgIH0KICB9LAogIGdldEF1ZGlvTGVuZ3RoOiBmdW5jdGlvbiBnZXRBdWRpb0xlbmd0aCh0eXBlKSB7CiAgICAvL+iOt+WPlumfs+inhumikeaXtumVvyAx6Z+z6aKRIDLop4bpopEKICAgIGlmICh0eXBlID09IDEpIHsKICAgICAgdGhpcy5pbml0QXVkaW8uYXVkaW9MZW5ndGggPSB0aGlzLiRyZWZzLmF1ZGlvLmR1cmF0aW9uOwogICAgICBjb25zb2xlLmxvZygn6I635Y+W6Z+z6aKR5pe26ZW/JywgdGhpcy4kcmVmcy5hdWRpby5kdXJhdGlvbik7CiAgICB9CgogICAgaWYgKHR5cGUgPT0gMikgewogICAgICB0aGlzLmluaXRWaWRlby52aWRlb0xlbmd0aCA9IHRoaXMuJHJlZnMudmlkZW8uZHVyYXRpb247CiAgICAgIGNvbnNvbGUubG9nKCfojrflj5bop4bpopHml7bplb8nLCB0aGlzLiRyZWZzLnZpZGVvLmR1cmF0aW9uKTsKICAgIH0KICB9LAogIGhhbmRQbGF5OiBmdW5jdGlvbiBoYW5kUGxheSh0eXBlLCBzdGF0dXMpIHsKICAgIC8v6Z+z6KeG6aKR5pKt5pS+5pqC5YGcIHR5cGU6MSDpn7PpopEgMuinhumikSBzdGF0dXMgMeaSreaUviAy5pqC5YGcCiAgICBpZiAodHlwZSA9PSAxKSB7CiAgICAgIHN0YXR1cyA9PSAxID8gdGhpcy5pbml0QXVkaW8ucGxheSA9IHRydWUgOiB0aGlzLmluaXRBdWRpby5wbGF5ID0gZmFsc2U7CiAgICB9IGVsc2UgewogICAgICBzdGF0dXMgPT0gMSA/IHRoaXMuaW5pdFZpZGVvLnBsYXkgPSB0cnVlIDogdGhpcy5pbml0VmlkZW8ucGxheSA9IGZhbHNlOwogICAgfQogIH0KfTs="},{"version":3,"sources":["Load.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AA0BA,eAAA;AACA,EAAA,IADA,kBACA;AACA,WAAA;AACA;AACA,MAAA,SAAA,EAAA;AACA,QAAA,IAAA,EAAA,KADA;AACA;AACA,QAAA,WAAA,EAAA,CAFA;AAEA;AACA,QAAA,GAAA,EAAA,4BAHA;AAGA;AACA,QAAA,WAAA,EAAA,CAJA;AAIA;AACA,QAAA,QAAA,EAAA,IALA;AAKA;AACA,QAAA,IAAA,EAAA;AANA,OAFA,CAUA;;AAVA,KAAA;AAaA,GAfA;AAgBA,EAAA,SAhBA,uBAgBA;AAAA;AACA,QAAA,KAAA,SAAA,CAAA,IAAA,EAAA;AACA,WAAA,KAAA,CAAA,KAAA,CAAA,KAAA;AACA,KAFA,MAEA;AACA,MAAA,IAAA,CAAA,GAAA,CAAA,KAAA,SAAA,CAAA,WAAA,GAAA,KAAA,KAAA,CAAA,KAAA,CAAA,WAAA,IAAA,CAAA,GAAA,KAAA,KAAA,CAAA,KAAA,CAAA,WAAA,GAAA,KAAA,SAAA,CAAA,WAAA,GAAA,EAAA;AACA,WAAA,KAAA,CAAA,KAAA,CAAA,IAAA;AACA,WAAA,KAAA,CAAA,KAAA,CAAA,KAAA,GAAA,KAAA;AACA;AACA,GAxBA;AAyBA,EAAA,eAzBA,6BAyBA;AAAA;AACA,QAAA,OAAA,GAAA,IAAA,CAAA,GAAA,EAAA;AACA,QAAA,OAAA,GAAA,IAAA;;AACA,QAAA,CAAA,KAAA,SAAA,CAAA,QAAA,IAAA,OAAA,GAAA,KAAA,SAAA,CAAA,QAAA,GAAA,OAAA,EAAA;AACA,UAAA,KAAA,KAAA,CAAA,KAAA,EAAA;AACA,YAAA,IAAA,GAAA,KAAA,KAAA,CAAA,KAAA,CAAA,WAAA;AACA,aAAA,SAAA,CAAA,WAAA,GAAA,IAAA;AACA;;AACA,WAAA,SAAA,CAAA,QAAA,GAAA,OAAA;AACA;AACA,GAnCA;AAoCA,EAAA,eApCA,2BAoCA,GApCA,EAoCA;AAAA;AACA,IAAA,OAAA,CAAA,GAAA,CAAA,GAAA,EAAA,OAAA;;AACA,QAAA,KAAA,KAAA,CAAA,KAAA,EAAA;AACA,WAAA,KAAA,CAAA,KAAA,CAAA,WAAA,GAAA,GAAA;AACA;AACA,GAzCA;AA0CA,EAAA,cA1CA,0BA0CA,IA1CA,EA0CA;AAAA;AACA,QAAA,IAAA,IAAA,CAAA,EAAA;AACA,WAAA,SAAA,CAAA,WAAA,GAAA,KAAA,KAAA,CAAA,KAAA,CAAA,QAAA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,QAAA,EAAA,KAAA,KAAA,CAAA,KAAA,CAAA,QAAA;AACA;;AACA,QAAA,IAAA,IAAA,CAAA,EAAA;AACA,WAAA,SAAA,CAAA,WAAA,GAAA,KAAA,KAAA,CAAA,KAAA,CAAA,QAAA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,QAAA,EAAA,KAAA,KAAA,CAAA,KAAA,CAAA,QAAA;AACA;AACA,GAnDA;AAoDA,EAAA,QApDA,oBAoDA,IApDA,EAoDA,MApDA,EAoDA;AAAA;AACA,QAAA,IAAA,IAAA,CAAA,EAAA;AACA,MAAA,MAAA,IAAA,CAAA,GAAA,KAAA,SAAA,CAAA,IAAA,GAAA,IAAA,GAAA,KAAA,SAAA,CAAA,IAAA,GAAA,KAAA;AACA,KAFA,MAEA;AACA,MAAA,MAAA,IAAA,CAAA,GAAA,KAAA,SAAA,CAAA,IAAA,GAAA,IAAA,GAAA,KAAA,SAAA,CAAA,IAAA,GAAA,KAAA;AACA;AACA;AA1DA,CAAA","sourcesContent":["<template>\n    <div class=\"video-box\">\n        <div class=\"video_playIcon\" v-if=\"!initVideo.play\" @click=\"playVideo\"></div>\n        //video API相关获取与调用\n        <video class=\"video\" ref=\"video\" :src=\"initVideo.url\" @pause=\"handPlay(2,2)\" @play=\"handPlay(2,1)\"\n            @loadedmetadata=\"getAudioLength(2)\" @timeupdate=\"videoTimeUpdate\" @click=\"playVideo\">\n            该浏览器不支持video\n        </video>\n        <div class=\"video_control\">\n            <div class=\"progress\">\n                //进度条\n                <el-slider class=\"commonSlider\" :show-tooltip=\"false\" v-model=\"initVideo.currentTime\"\n                        :max=\"initVideo.videoLength\" @change=\"changeVideoTime\">\n                </el-slider>\n                <div class=\"time\">\n                    //videoLength 总时间，currentTime 当前时间，videoTime 自定义过滤器\n                    <span>{{initVideo.currentTime | videoTime}}</span>\n                    <span>{{initVideo.videoLength | videoTime}}</span>\n                </div>\n            </div>\n        </div>\n    </div>\n\n</template>\n\n<script>\nexport default {\n    data() {\n        return {\n            //视频\n            initVideo: {\n                play: false,//播放还是暂停 true播放中\n                videoLength: 0,//时长\n                url: \"../../../public/movie2.mp4\",//视频课件Url\n                currentTime: 0,//当前播放时间\n                lastTime: null,//标记时间戳\n                name: \"\",\n            },\n            //音频\n            \n        };\n    },\n\t\tplayVideo() {//播放视频\n            if (this.initVideo.play) {\n                this.$refs.video.pause();\n            } else {\n                Math.abs(this.initVideo.currentTime - this.$refs.video.currentTime) > 2 ? this.$refs.video.currentTime = this.initVideo.currentTime : '';\n                this.$refs.video.play();\n                this.$refs.video.muted = false\n            }\n        },\n        videoTimeUpdate() {//更新视频时间。节流，每秒触发一次\n            let nowTime = Date.now()\n            let gapTime = 1000;\n            if (!this.initVideo.lastTime || nowTime - this.initVideo.lastTime > gapTime) {\n                if (this.$refs.video) {\n                    let time = this.$refs.video.currentTime;\n                    this.initVideo.currentTime = time;\n                }\n                this.initVideo.lastTime = nowTime\n            }\n        },\n        changeVideoTime(val) {//改变视频时间\n            console.log(val, 'video')\n            if (this.$refs.video) {\n                this.$refs.video.currentTime = val;\n            }\n        },\n        getAudioLength(type) {//获取音视频时长 1音频 2视频\n            if (type == 1) {\n                this.initAudio.audioLength = this.$refs.audio.duration\n                console.log('获取音频时长', this.$refs.audio.duration)\n            }\n            if (type == 2) {\n                this.initVideo.videoLength = this.$refs.video.duration\n                console.log('获取视频时长', this.$refs.video.duration)\n            }\n        },\n        handPlay(type, status) {//音视频播放暂停 type:1 音频 2视频 status 1播放 2暂停\n            if (type == 1) {\n                status == 1 ? this.initAudio.play = true : this.initAudio.play = false;\n            } else {\n                status == 1 ? this.initVideo.play = true : this.initVideo.play = false;\n            }\n        }\n}\n</script>\n\n<style>\n\n</style>"],"sourceRoot":"src/views/edit"}]}