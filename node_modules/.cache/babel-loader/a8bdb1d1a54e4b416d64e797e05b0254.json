{"remainingRequest":"/Users/zbywjq/Desktop/cloudwork/VideoBatches/node_modules/babel-loader/lib/index.js!/Users/zbywjq/Desktop/cloudwork/VideoBatches/src/libs/ChangeTheme.js","dependencies":[{"path":"/Users/zbywjq/Desktop/cloudwork/VideoBatches/src/libs/ChangeTheme.js","mtime":1596418914795},{"path":"/Users/zbywjq/Desktop/cloudwork/VideoBatches/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zbywjq/Desktop/cloudwork/VideoBatches/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZm9yLWVhY2giOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5qb2luIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubGFzdC1pbmRleC1vZiI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LnNsaWNlIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMubnVtYmVyLmNvbnN0cnVjdG9yIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMubnVtYmVyLnRvLWZpeGVkIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC5jb25zdHJ1Y3RvciI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC5leGVjIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLnRvLXN0cmluZyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5pdGVyYXRvciI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5yZXBsYWNlIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5mb3ItZWFjaCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuaXRlcmF0b3IiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIudXJsIjsKaW1wb3J0IF9jbGFzc0NhbGxDaGVjayBmcm9tICIvVXNlcnMvemJ5d2pxL0Rlc2t0b3AvY2xvdWR3b3JrL1ZpZGVvQmF0Y2hlcy9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vY2xhc3NDYWxsQ2hlY2siOwppbXBvcnQgX2NyZWF0ZUNsYXNzIGZyb20gIi9Vc2Vycy96Ynl3anEvRGVza3RvcC9jbG91ZHdvcmsvVmlkZW9CYXRjaGVzL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9jcmVhdGVDbGFzcyI7Ci8vIGNvbnN0IHZlcnNpb24gPSByZXF1aXJlKCdlbGVtZW50LXVpL3BhY2thZ2UuanNvbicpLnZlcnNpb24gLy8gZWxlbWVudC11aSB2ZXJzaW9uIGZyb20gbm9kZV9tb2R1bGVzCnZhciBPUklHSU5BTF9USEVNRSA9ICcjNDA5RUZGJzsgLy8gZGVmYXVsdCBjb2xvcgoKdmFyIENoYW5nZVRoZW1lID0gLyojX19QVVJFX18qL2Z1bmN0aW9uICgpIHsKICBmdW5jdGlvbiBDaGFuZ2VUaGVtZSgpIHsKICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBDaGFuZ2VUaGVtZSk7CgogICAgdGhpcy5vbGRDb2xvciA9ICcjNDA5RUZGJzsgLy8gdGhpcy5jaGFsayA9IHJlcXVpcmUoJy4vaW5kZXgudHh0Jyk7CgogICAgdGhpcy5jc3NsaW5rcyA9IFtdOwogICAgdGhpcy5zdHlsZXMgPSBbXTsKICB9CgogIF9jcmVhdGVDbGFzcyhDaGFuZ2VUaGVtZSwgW3sKICAgIGtleTogImluaXRDc3MiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGluaXRDc3MoKSB7CiAgICAgIHZhciBjc3NsaW5rcyA9IFtdOwoKICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBkb2N1bWVudC5oZWFkLmNoaWxkcmVuLmxlbmd0aDsgaSsrKSB7CiAgICAgICAgdmFyIG5vZGUgPSBkb2N1bWVudC5oZWFkLmNoaWxkcmVuW2ldOwoKICAgICAgICBpZiAobm9kZS5ub2RlTmFtZSA9PSAnTElOSycgfHwgbm9kZS5ub2RlTmFtZSA9PSAnbGluaycpIHsKICAgICAgICAgIHZhciB1cmwgPSBub2RlLmdldEF0dHJpYnV0ZSgnaHJlZicpOwoKICAgICAgICAgIGlmICh1cmwubGFzdEluZGV4T2YoJy5jc3MnKSA+IC0xICYmIG5vZGUucmVsICE9ICdwcmVsb2FkJykgewogICAgICAgICAgICAvLyBsZXQgc3R5bGVkb20gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzdHlsZScpOwogICAgICAgICAgICB2YXIgbmV3TGlua0RvbSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2xpbmsnKTsKICAgICAgICAgICAgbmV3TGlua0RvbS5yZWwgPSAnc3R5bGVzaGVldCc7CiAgICAgICAgICAgIGNzc2xpbmtzLnB1c2goewogICAgICAgICAgICAgIHR5cGU6ICdsaW5rJywKICAgICAgICAgICAgICBkb206IG5ld0xpbmtEb20sCiAgICAgICAgICAgICAgLy8gc3R5bGVEb206IHN0eWxlZG9tLAogICAgICAgICAgICAgIHJhd1VybDogdXJsLAogICAgICAgICAgICAgIGNzc1RleHQ6ICcnLAogICAgICAgICAgICAgIG9ialVybDogbnVsbAogICAgICAgICAgICB9KTsKICAgICAgICAgIH0KICAgICAgICB9IGVsc2UgaWYgKG5vZGUubm9kZU5hbWUgPT0gJ1NUWUxFJyB8fCBub2RlLm5vZGVOYW1lID09ICdzdHlsZScpIHsKICAgICAgICAgIGNzc2xpbmtzLnB1c2goewogICAgICAgICAgICB0eXBlOiAnc3R5bGUnLAogICAgICAgICAgICBkb206IG5vZGUsCiAgICAgICAgICAgIHJhd1VybDogJycsCiAgICAgICAgICAgIGNzc1RleHQ6IG5vZGUuaW5uZXJUZXh0LAogICAgICAgICAgICAvL25ldyBSZWdFeHAoT1JJR0lOQUxfVEhFTUUsICdpJykudGVzdCh0ZXh0KSAmJiAhL0NoYWxrIFZhcmlhYmxlcy8udGVzdCh0ZXh0KSwKICAgICAgICAgICAgb2JqVXJsOiBudWxsCiAgICAgICAgICB9KTsKICAgICAgICB9CiAgICAgIH0KCiAgICAgIHZhciBwcm9taXNlcyA9IFtdOwoKICAgICAgZm9yICh2YXIgX2kgPSAwOyBfaSA8IGNzc2xpbmtzLmxlbmd0aDsgX2krKykgewogICAgICAgIHZhciBpdGVtID0gY3NzbGlua3NbX2ldOwoKICAgICAgICBpZiAoaXRlbS50eXBlID09ICdsaW5rJykgewogICAgICAgICAgcHJvbWlzZXMucHVzaCh0aGlzLmdldENzc1RleHQoaXRlbS5yYXdVcmwpKTsKICAgICAgICB9CiAgICAgIH0gLy8gY29uc3Qgc3R5bGVzID0gW10uc2xpY2UuY2FsbChkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCdzdHlsZScpKQogICAgICAvLyAgICAgLmZpbHRlcihzdHlsZSA9PiB7CiAgICAgIC8vICAgICAgICAgY29uc3QgdGV4dCA9IHN0eWxlLmlubmVyVGV4dAogICAgICAvLyAgICAgICAgIHJldHVybiBuZXcgUmVnRXhwKG9sZFZhbCwgJ2knKS50ZXN0KHRleHQpICYmICEvQ2hhbGsgVmFyaWFibGVzLy50ZXN0KHRleHQpCiAgICAgIC8vICAgICB9KTsKCgogICAgICB0aGlzLmNzc2xpbmtzID0gY3NzbGlua3M7CiAgICAgIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7CiAgICAgICAgUHJvbWlzZS5hbGwocHJvbWlzZXMpLnRoZW4oZnVuY3Rpb24gKGNzc2FycikgewogICAgICAgICAgLy8gY29uc29sZS5sb2coJ+WQiOW5tuWQjueahGNzc2FycicsY3NzYXJyKQogICAgICAgICAgZm9yICh2YXIgX2kyID0gMDsgX2kyIDwgY3NzYXJyLmxlbmd0aDsgX2kyKyspIHsKICAgICAgICAgICAgY3NzbGlua3NbX2kyXS5jc3NUZXh0ID0gY3NzYXJyW19pMl07CiAgICAgICAgICB9IC8vIGNvbnNvbGUubG9nKCd0aGlzLmNzc0xpbmtzJyx0aGlzLmNzc2xpbmtzKQoKCiAgICAgICAgICByZXNvbHZlKCdzdWNjZXNzJyk7CiAgICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKCkgewogICAgICAgICAgcmVqZWN0KCdlcnJvcicpOwogICAgICAgIH0pOwogICAgICB9KTsKICAgIH0KICAgIC8qKiDmlLnlj5jpopzoibIgIOW9k+WJjeminOiJsiAg5Y6f5aeL6aKc6ImyICovCgogIH0sIHsKICAgIGtleTogImNoYW5nZVRoZW1lIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBjaGFuZ2VUaGVtZSh2YWwpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIC8vIGxldCBvbGRWYWwgPSB0aGlzLm9sZENvbG9yOwogICAgICB2YXIgdGhlbWVDbHVzdGVyID0gdGhpcy5nZXRUaGVtZUNsdXN0ZXIodmFsLnJlcGxhY2UoJyMnLCAnJykpOwogICAgICB2YXIgb3JpZ2luYWxDbHVzdGVyID0gdGhpcy5nZXRUaGVtZUNsdXN0ZXIoT1JJR0lOQUxfVEhFTUUucmVwbGFjZSgnIycsICcnKSk7CiAgICAgIHRoaXMuY3NzbGlua3MuZm9yRWFjaChmdW5jdGlvbiAoaXRlbSkgewogICAgICAgIHZhciBzdHlsZUNzc1RleHQgPSBfdGhpcy51cGRhdGVTdHlsZShpdGVtLmNzc1RleHQsIG9yaWdpbmFsQ2x1c3RlciwgdGhlbWVDbHVzdGVyKTsKCiAgICAgICAgaWYgKGl0ZW0udHlwZSA9PSAnc3R5bGUnKSB7CiAgICAgICAgICBpdGVtLmRvbS5pbm5lclRleHQgPSBzdHlsZUNzc1RleHQ7CiAgICAgICAgfSBlbHNlIGlmIChpdGVtLnR5cGUgPT0gJ2xpbmsnKSB7CiAgICAgICAgICAvLyBzdHlsZUNzc1RleHQgPSBzdHlsZUNzc1RleHQucmVwbGFjZShuZXcgUmVnRXhwKCcuLi8nLCAnaWcnKSwgJy8nKTsKICAgICAgICAgIHN0eWxlQ3NzVGV4dCA9IHN0eWxlQ3NzVGV4dC5yZXBsYWNlKC9cLlwuXC8vZywgJy8nKTsKICAgICAgICAgIHN0eWxlQ3NzVGV4dCA9IHN0eWxlQ3NzVGV4dC5yZXBsYWNlKC9AZm9udC1mYWNle1tefV0rfS8sICcnKTsgLy8gaXRlbS5kb20ucmVtb3ZlKCk7CiAgICAgICAgICAvLyBpdGVtLnN0eWxlRG9tLmlubmVyVGV4dCA9IHN0eWxlQ3NzVGV4dDsKCiAgICAgICAgICBpZiAoaXRlbS5vYmpVcmwpIHsKICAgICAgICAgICAgd2luZG93LlVSTC5yZXZva2VPYmplY3RVUkwoaXRlbS5vYmpVcmwpOwogICAgICAgICAgfQoKICAgICAgICAgIHZhciBibG9iID0gbmV3IEJsb2IoW3N0eWxlQ3NzVGV4dF0sIHsKICAgICAgICAgICAgdHlwZTogInRleHQvY3NzO2NoYXJzZXQ9dXRmLTgiCiAgICAgICAgICB9KTsKICAgICAgICAgIGl0ZW0ub2JqVXJsID0gd2luZG93LlVSTC5jcmVhdGVPYmplY3RVUkwoYmxvYik7CiAgICAgICAgICBpdGVtLmRvbS5ocmVmID0gaXRlbS5vYmpVcmw7CiAgICAgICAgICBkb2N1bWVudC5oZWFkLmFwcGVuZENoaWxkKGl0ZW0uZG9tKTsKICAgICAgICB9CiAgICAgIH0pOyAvLyBjb25zb2xlLmxvZygn5Y6f6ImyJyxvcmlnaW5hbENsdXN0ZXIpCiAgICAgIC8vIGNvbnNvbGUubG9nKCfmm7/mjaLoibInLHRoZW1lQ2x1c3RlcikKICAgICAgLy8gY29uc3QgZ2V0SGFuZGxlciA9ICh2YXJpYWJsZSwgaWQpID0+IHsKICAgICAgLy8gICAgIHJldHVybiAoKSA9PiB7CiAgICAgIC8vICAgICAgICAgY29uc3Qgb3JpZ2luYWxDbHVzdGVyID0gdGhpcy5nZXRUaGVtZUNsdXN0ZXIoT1JJR0lOQUxfVEhFTUUucmVwbGFjZSgnIycsICcnKSkKICAgICAgLy8gICAgICAgICBjb25zdCBuZXdTdHlsZSA9IHRoaXMudXBkYXRlU3R5bGUodGhpc1t2YXJpYWJsZV0sIG9yaWdpbmFsQ2x1c3RlciwgdGhlbWVDbHVzdGVyKQogICAgICAvLyAgICAgICAgIGxldCBzdHlsZVRhZyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGlkKQogICAgICAvLyAgICAgICAgIGlmICghc3R5bGVUYWcpIHsKICAgICAgLy8gICAgICAgICAgICAgc3R5bGVUYWcgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzdHlsZScpCiAgICAgIC8vICAgICAgICAgICAgIHN0eWxlVGFnLnNldEF0dHJpYnV0ZSgnaWQnLCBpZCkKICAgICAgLy8gICAgICAgICAgICAgZG9jdW1lbnQuaGVhZC5hcHBlbmRDaGlsZChzdHlsZVRhZykKICAgICAgLy8gICAgICAgICB9CiAgICAgIC8vICAgICAgICAgc3R5bGVUYWcuaW5uZXJUZXh0ID0gbmV3U3R5bGUKICAgICAgLy8gICAgIH0KICAgICAgLy8gfQogICAgICAvLyBjb25zdCBjaGFsa0hhbmRsZXIgPSBnZXRIYW5kbGVyKCdjaGFsaycsICdjaGFsay1zdHlsZScpCiAgICAgIC8vIGlmICghdGhpcy5jaGFsaykgewogICAgICAvLyAgICAgY29uc3QgdXJsID0gYGh0dHBzOi8vdW5wa2cuY29tL2VsZW1lbnQtdWlAJHt2ZXJzaW9ufS9saWIvdGhlbWUtY2hhbGsvaW5kZXguY3NzYDsKICAgICAgLy8gICAgIC8vIGNvbnN0IHVybCA9ICdhc3NldHMvY2hhbGsvaW5kZXguY3NzJzsKICAgICAgLy8gICAgIHRoaXMuZ2V0Q1NTU3RyaW5nKHVybCwgY2hhbGtIYW5kbGVyLCAnY2hhbGsnKQogICAgICAvLyB9IGVsc2UgewogICAgICAvLyBjaGFsa0hhbmRsZXIoKQogICAgICAvLyB9CiAgICAgIC8vIGNvbnN0IHN0eWxlcyA9IFtdLnNsaWNlLmNhbGwoZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnc3R5bGUnKSkKICAgICAgLy8gICAgIC5maWx0ZXIoc3R5bGUgPT4gewogICAgICAvLyAgICAgICAgIGNvbnN0IHRleHQgPSBzdHlsZS5pbm5lclRleHQKICAgICAgLy8gICAgICAgICByZXR1cm4gbmV3IFJlZ0V4cChvbGRWYWwsICdpJykudGVzdCh0ZXh0KSAmJiAhL0NoYWxrIFZhcmlhYmxlcy8udGVzdCh0ZXh0KQogICAgICAvLyAgICAgfSk7CiAgICAgIC8vIC8vIGNvbnNvbGUubG9nKCdzdHlsZXMnLHN0eWxlcykKICAgICAgLy8gc3R5bGVzLmZvckVhY2goc3R5bGUgPT4gewogICAgICAvLyAgICAgY29uc3QgeyBpbm5lclRleHQgfSA9IHN0eWxlCiAgICAgIC8vICAgICBpZiAodHlwZW9mIGlubmVyVGV4dCAhPT0gJ3N0cmluZycpIHJldHVybgogICAgICAvLyAgICAgc3R5bGUuaW5uZXJUZXh0ID0gdGhpcy51cGRhdGVTdHlsZShpbm5lclRleHQsIG9yaWdpbmFsQ2x1c3RlciwgdGhlbWVDbHVzdGVyKQogICAgICAvLyB9KQogICAgICAvLyB0aGlzLm9sZENvbG9yID0gdmFsOwogICAgfSAvL+WKoOi9vWNzc+aWh+acrAoKICB9LCB7CiAgICBrZXk6ICJnZXRDc3NUZXh0IiwKICAgIHZhbHVlOiBmdW5jdGlvbiBnZXRDc3NUZXh0KHVybCkgewogICAgICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkgewogICAgICAgIHZhciB4aHIgPSBuZXcgWE1MSHR0cFJlcXVlc3QoKTsKICAgICAgICB4aHIucmVzcG9uc2VUeXBlID0gJ3RleHQnOyAvL+mFjee9ruaVsOaNrui/lOWbnuexu+WeiwoKICAgICAgICB4aHIub25yZWFkeXN0YXRlY2hhbmdlID0gZnVuY3Rpb24gKCkgewogICAgICAgICAgaWYgKHhoci5yZWFkeVN0YXRlID09PSA0KSB7CiAgICAgICAgICAgIGlmICh4aHIuc3RhdHVzID49IDIwMCAmJiB4aHIuc3RhdHVzIDwgMzAwIHx8IHhoci5zdGF0dXMgPT09IDMwNCkgewogICAgICAgICAgICAgIHJlc29sdmUoeGhyLnJlc3BvbnNlKTsKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICByZWplY3QoJycpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfTsKCiAgICAgICAgeGhyLm9wZW4oJ0dFVCcsIHVybCwgdHJ1ZSk7CiAgICAgICAgeGhyLnNlbmQoKTsKICAgICAgfSk7CiAgICB9CiAgfSwgewogICAga2V5OiAidXBkYXRlU3R5bGUiLAogICAgdmFsdWU6IGZ1bmN0aW9uIHVwZGF0ZVN0eWxlKHN0eWxlLCBvbGRDbHVzdGVyLCBuZXdDbHVzdGVyKSB7CiAgICAgIHZhciBuZXdTdHlsZSA9IHN0eWxlOwogICAgICBvbGRDbHVzdGVyLmZvckVhY2goZnVuY3Rpb24gKGNvbG9yLCBpbmRleCkgewogICAgICAgIG5ld1N0eWxlID0gbmV3U3R5bGUucmVwbGFjZShuZXcgUmVnRXhwKGNvbG9yLCAnaWcnKSwgbmV3Q2x1c3RlcltpbmRleF0pOwogICAgICB9KTsKICAgICAgcmV0dXJuIG5ld1N0eWxlOwogICAgfQogIH0sIHsKICAgIGtleTogImdldENTU1N0cmluZyIsCiAgICB2YWx1ZTogZnVuY3Rpb24gZ2V0Q1NTU3RyaW5nKHVybCwgY2FsbGJhY2ssIHZhcmlhYmxlKSB7CiAgICAgIHZhciBfdGhpczIgPSB0aGlzOwoKICAgICAgdmFyIHhociA9IG5ldyBYTUxIdHRwUmVxdWVzdCgpOwoKICAgICAgeGhyLm9ucmVhZHlzdGF0ZWNoYW5nZSA9IGZ1bmN0aW9uICgpIHsKICAgICAgICBpZiAoeGhyLnJlYWR5U3RhdGUgPT09IDQgJiYgeGhyLnN0YXR1cyA9PT0gMjAwKSB7CiAgICAgICAgICBfdGhpczJbdmFyaWFibGVdID0geGhyLnJlc3BvbnNlVGV4dC5yZXBsYWNlKC9AZm9udC1mYWNle1tefV0rfS8sICcnKTsKICAgICAgICAgIGNhbGxiYWNrKCk7CiAgICAgICAgfQogICAgICB9OwoKICAgICAgeGhyLm9wZW4oJ0dFVCcsIHVybCk7CiAgICAgIHhoci5zZW5kKCk7CiAgICB9CiAgfSwgewogICAga2V5OiAiZ2V0VGhlbWVDbHVzdGVyIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBnZXRUaGVtZUNsdXN0ZXIodGhlbWUpIHsKICAgICAgdmFyIHRpbnRDb2xvciA9IGZ1bmN0aW9uIHRpbnRDb2xvcihjb2xvciwgdGludCkgewogICAgICAgIHZhciByZWQgPSBwYXJzZUludChjb2xvci5zbGljZSgwLCAyKSwgMTYpOwogICAgICAgIHZhciBncmVlbiA9IHBhcnNlSW50KGNvbG9yLnNsaWNlKDIsIDQpLCAxNik7CiAgICAgICAgdmFyIGJsdWUgPSBwYXJzZUludChjb2xvci5zbGljZSg0LCA2KSwgMTYpOwoKICAgICAgICBpZiAodGludCA9PT0gMCkgewogICAgICAgICAgLy8gd2hlbiBwcmltYXJ5IGNvbG9yIGlzIGluIGl0cyByZ2Igc3BhY2UKICAgICAgICAgIHJldHVybiBbcmVkLCBncmVlbiwgYmx1ZV0uam9pbignLCcpOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICByZWQgKz0gTWF0aC5yb3VuZCh0aW50ICogKDI1NSAtIHJlZCkpOwogICAgICAgICAgZ3JlZW4gKz0gTWF0aC5yb3VuZCh0aW50ICogKDI1NSAtIGdyZWVuKSk7CiAgICAgICAgICBibHVlICs9IE1hdGgucm91bmQodGludCAqICgyNTUgLSBibHVlKSk7CiAgICAgICAgICByZWQgPSByZWQudG9TdHJpbmcoMTYpOwogICAgICAgICAgZ3JlZW4gPSBncmVlbi50b1N0cmluZygxNik7CiAgICAgICAgICBibHVlID0gYmx1ZS50b1N0cmluZygxNik7CiAgICAgICAgICByZWQgPSByZWQubGVuZ3RoID09IDEgPyAnMCcgKyByZWQgOiByZWQ7CiAgICAgICAgICBncmVlbiA9IGdyZWVuLmxlbmd0aCA9PSAxID8gJzAnICsgZ3JlZW4gOiBncmVlbjsKICAgICAgICAgIGJsdWUgPSBibHVlLmxlbmd0aCA9PSAxID8gJzAnICsgYmx1ZSA6IGJsdWU7CiAgICAgICAgICByZXR1cm4gIiMiLmNvbmNhdChyZWQpLmNvbmNhdChncmVlbikuY29uY2F0KGJsdWUpOwogICAgICAgIH0KICAgICAgfTsKCiAgICAgIHZhciBzaGFkZUNvbG9yID0gZnVuY3Rpb24gc2hhZGVDb2xvcihjb2xvciwgc2hhZGUpIHsKICAgICAgICB2YXIgcmVkID0gcGFyc2VJbnQoY29sb3Iuc2xpY2UoMCwgMiksIDE2KTsKICAgICAgICB2YXIgZ3JlZW4gPSBwYXJzZUludChjb2xvci5zbGljZSgyLCA0KSwgMTYpOwogICAgICAgIHZhciBibHVlID0gcGFyc2VJbnQoY29sb3Iuc2xpY2UoNCwgNiksIDE2KTsKICAgICAgICByZWQgPSBNYXRoLnJvdW5kKCgxIC0gc2hhZGUpICogcmVkKTsKICAgICAgICBncmVlbiA9IE1hdGgucm91bmQoKDEgLSBzaGFkZSkgKiBncmVlbik7CiAgICAgICAgYmx1ZSA9IE1hdGgucm91bmQoKDEgLSBzaGFkZSkgKiBibHVlKTsKICAgICAgICByZWQgPSByZWQudG9TdHJpbmcoMTYpOwogICAgICAgIGdyZWVuID0gZ3JlZW4udG9TdHJpbmcoMTYpOwogICAgICAgIGJsdWUgPSBibHVlLnRvU3RyaW5nKDE2KTsKICAgICAgICByZWQgPSByZWQubGVuZ3RoID09IDEgPyAnMCcgKyByZWQgOiByZWQ7CiAgICAgICAgZ3JlZW4gPSBncmVlbi5sZW5ndGggPT0gMSA/ICcwJyArIGdyZWVuIDogZ3JlZW47CiAgICAgICAgYmx1ZSA9IGJsdWUubGVuZ3RoID09IDEgPyAnMCcgKyBibHVlIDogYmx1ZTsKICAgICAgICByZXR1cm4gIiMiLmNvbmNhdChyZWQpLmNvbmNhdChncmVlbikuY29uY2F0KGJsdWUpOwogICAgICB9OwoKICAgICAgdmFyIGNsdXN0ZXJzID0gW3RoZW1lXTsKCiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDw9IDk7IGkrKykgewogICAgICAgIGNsdXN0ZXJzLnB1c2godGludENvbG9yKHRoZW1lLCBOdW1iZXIoKGkgLyAxMCkudG9GaXhlZCgyKSkpKTsKICAgICAgfQoKICAgICAgY2x1c3RlcnMucHVzaChzaGFkZUNvbG9yKHRoZW1lLCAwLjEpKTsKICAgICAgcmV0dXJuIGNsdXN0ZXJzOwogICAgfQogIH1dKTsKCiAgcmV0dXJuIENoYW5nZVRoZW1lOwp9KCk7CgpleHBvcnQgZGVmYXVsdCBuZXcgQ2hhbmdlVGhlbWUoKTs="},{"version":3,"sources":["/Users/zbywjq/Desktop/cloudwork/VideoBatches/src/libs/ChangeTheme.js"],"names":["ORIGINAL_THEME","ChangeTheme","oldColor","csslinks","styles","i","document","head","children","length","node","nodeName","url","getAttribute","lastIndexOf","rel","newLinkDom","createElement","push","type","dom","rawUrl","cssText","objUrl","innerText","promises","item","getCssText","Promise","resolve","reject","all","then","cssarr","catch","val","themeCluster","getThemeCluster","replace","originalCluster","forEach","styleCssText","updateStyle","window","URL","revokeObjectURL","blob","Blob","createObjectURL","href","appendChild","xhr","XMLHttpRequest","responseType","onreadystatechange","readyState","status","response","open","send","style","oldCluster","newCluster","newStyle","color","index","RegExp","callback","variable","responseText","theme","tintColor","tint","red","parseInt","slice","green","blue","join","Math","round","toString","shadeColor","shade","clusters","Number","toFixed"],"mappings":"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","sourcesContent":["// const version = require('element-ui/package.json').version // element-ui version from node_modules\nconst ORIGINAL_THEME = '#409EFF' // default color\nclass ChangeTheme{\n    constructor(){\n        this.oldColor = '#409EFF';\n        // this.chalk = require('./index.txt');\n        this.csslinks = [];\n        this.styles = [];\n    }\n\n    initCss(){\n        const csslinks = [];\n        for(let i=0;i<document.head.children.length;i++){\n            let node = document.head.children[i];\n            if(node.nodeName == 'LINK' || node.nodeName == 'link'){\n                let url = node.getAttribute('href');\n                if(url.lastIndexOf('.css')>-1 && node.rel != 'preload'){\n                    // let styledom = document.createElement('style');\n                    let newLinkDom = document.createElement('link');\n                    newLinkDom.rel='stylesheet';\n                    csslinks.push({\n                        type:'link',\n                        dom:newLinkDom,\n                        // styleDom: styledom,\n                        rawUrl:url,\n                        cssText:'',\n                        objUrl:null\n                    })\n                }\n            }else if(node.nodeName == 'STYLE' || node.nodeName == 'style'){\n                csslinks.push({\n                    type:'style',\n                    dom:node,\n                    rawUrl:'',\n                    cssText: node.innerText,//new RegExp(ORIGINAL_THEME, 'i').test(text) && !/Chalk Variables/.test(text),\n                    objUrl:null\n                })\n            }\n        }\n\n        const promises = [];\n        for(let i=0;i<csslinks.length;i++){\n            let item = csslinks[i];\n            if(item.type == 'link'){\n                promises.push(this.getCssText(item.rawUrl));\n            }\n            \n        }\n\n        // const styles = [].slice.call(document.querySelectorAll('style'))\n        //     .filter(style => {\n        //         const text = style.innerText\n        //         return new RegExp(oldVal, 'i').test(text) && !/Chalk Variables/.test(text)\n        //     });\n        this.csslinks = csslinks;\n        return new Promise((resolve,reject)=>{\n            Promise.all(promises).then((cssarr)=>{\n                // console.log('合并后的cssarr',cssarr)\n                for(let i=0;i<cssarr.length;i++){\n                    csslinks[i].cssText = cssarr[i];\n                }\n                // console.log('this.cssLinks',this.csslinks)\n                resolve('success');\n            }).catch(()=>{\n                reject('error');\n            });\n        })\n        \n    }\n\n    /** 改变颜色  当前颜色  原始颜色 */\n    changeTheme(val){\n        // let oldVal = this.oldColor;\n        const themeCluster = this.getThemeCluster(val.replace('#', ''));\n        const originalCluster = this.getThemeCluster(ORIGINAL_THEME.replace('#', ''));\n        this.csslinks.forEach(item=>{\n            let styleCssText = this.updateStyle(item.cssText,originalCluster, themeCluster);\n            if(item.type == 'style'){\n                item.dom.innerText = styleCssText;\n            }else if(item.type == 'link'){\n                // styleCssText = styleCssText.replace(new RegExp('../', 'ig'), '/');\n                styleCssText = styleCssText.replace(/\\.\\.\\//g,'/');\n                styleCssText = styleCssText.replace(/@font-face{[^}]+}/, '');\n                // item.dom.remove();\n                // item.styleDom.innerText = styleCssText;\n                if(item.objUrl){\n                    window.URL.revokeObjectURL(item.objUrl);\n                }\n                const blob = new Blob([styleCssText], {type:\"text/css;charset=utf-8\"});\n                item.objUrl = window.URL.createObjectURL(blob);\n                item.dom.href = item.objUrl;\n                document.head.appendChild(item.dom);\n            }\n        })\n        // console.log('原色',originalCluster)\n        // console.log('替换色',themeCluster)\n        // const getHandler = (variable, id) => {\n        //     return () => {\n        //         const originalCluster = this.getThemeCluster(ORIGINAL_THEME.replace('#', ''))\n        //         const newStyle = this.updateStyle(this[variable], originalCluster, themeCluster)\n\n        //         let styleTag = document.getElementById(id)\n        //         if (!styleTag) {\n        //             styleTag = document.createElement('style')\n        //             styleTag.setAttribute('id', id)\n        //             document.head.appendChild(styleTag)\n        //         }\n        //         styleTag.innerText = newStyle\n        //     }\n        // }\n        // const chalkHandler = getHandler('chalk', 'chalk-style')\n\n        // if (!this.chalk) {\n        //     const url = `https://unpkg.com/element-ui@${version}/lib/theme-chalk/index.css`;\n        //     // const url = 'assets/chalk/index.css';\n        //     this.getCSSString(url, chalkHandler, 'chalk')\n        // } else {\n            // chalkHandler()\n        // }\n\n        // const styles = [].slice.call(document.querySelectorAll('style'))\n        //     .filter(style => {\n        //         const text = style.innerText\n        //         return new RegExp(oldVal, 'i').test(text) && !/Chalk Variables/.test(text)\n        //     });\n        // // console.log('styles',styles)\n        // styles.forEach(style => {\n        //     const { innerText } = style\n        //     if (typeof innerText !== 'string') return\n        //     style.innerText = this.updateStyle(innerText, originalCluster, themeCluster)\n        // })\n\n        // this.oldColor = val;\n    }\n\n    //加载css文本\n    getCssText(url){\n        return new Promise((resolve,reject)=>{\n            let xhr = new XMLHttpRequest(); \n            xhr.responseType = 'text'; //配置数据返回类型\n            xhr.onreadystatechange = () => {\n                if(xhr.readyState === 4){\n                    if((xhr.status >= 200 && xhr.status < 300) || xhr.status === 304){\n                        resolve(xhr.response);\n                    }else{\n                        reject('');\n                    }\n                }\n            }\n            xhr.open('GET', url, true); \n            xhr.send();\n        })\n    }\n\n\n    updateStyle(style, oldCluster, newCluster) {\n        let newStyle = style\n        oldCluster.forEach((color, index) => {\n          newStyle = newStyle.replace(new RegExp(color, 'ig'), newCluster[index])\n        })\n        return newStyle\n    }\n  \n    getCSSString(url, callback, variable) {\n        const xhr = new XMLHttpRequest()\n        xhr.onreadystatechange = () => {\n            if (xhr.readyState === 4 && xhr.status === 200) {\n                this[variable] = xhr.responseText.replace(/@font-face{[^}]+}/, '')\n                callback()\n            }\n        }\n        xhr.open('GET', url)\n        xhr.send()\n    }\n  \n    getThemeCluster(theme) {\n        const tintColor = (color, tint) => {\n            let red = parseInt(color.slice(0, 2), 16)\n            let green = parseInt(color.slice(2, 4), 16)\n            let blue = parseInt(color.slice(4, 6), 16)\n\n            if (tint === 0) { // when primary color is in its rgb space\n                return [red, green, blue].join(',')\n            } else {\n                red += Math.round(tint * (255 - red))\n                green += Math.round(tint * (255 - green))\n                blue += Math.round(tint * (255 - blue))\n\n                red = red.toString(16)\n                green = green.toString(16)\n                blue = blue.toString(16)\n\n                red = red.length == 1?'0'+red:red;\n                green = green.length == 1?'0'+green:green;\n                blue = blue.length == 1?'0'+blue:blue;\n\n                return `#${red}${green}${blue}`\n            }\n        }\n\n        const shadeColor = (color, shade) => {\n            let red = parseInt(color.slice(0, 2), 16)\n            let green = parseInt(color.slice(2, 4), 16)\n            let blue = parseInt(color.slice(4, 6), 16)\n\n            red = Math.round((1 - shade) * red)\n            green = Math.round((1 - shade) * green)\n            blue = Math.round((1 - shade) * blue)\n\n            red = red.toString(16)\n            green = green.toString(16)\n            blue = blue.toString(16)\n\n            red = red.length == 1?'0'+red:red;\n            green = green.length == 1?'0'+green:green;\n            blue = blue.length == 1?'0'+blue:blue;\n\n            return `#${red}${green}${blue}`\n        }\n\n        const clusters = [theme]\n        for (let i = 0; i <= 9; i++) {\n            clusters.push(tintColor(theme, Number((i / 10).toFixed(2))))\n        }\n        clusters.push(shadeColor(theme, 0.1))\n        return clusters\n    }\n}\nexport default new ChangeTheme;"]}]}